steps:
  - task: Bash@3
    inputs:
      targetType: 'filePath'
      failOnStderr: true
      filePath: '$(System.DefaultWorkingDirectory)/versionnumber.sh'
      arguments: $(version) $(Build.BuildId)
    displayName: 'Setting build version'

  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: 'env | sort'
    displayName: 'Display environment variables'

  - task: PowerShell@2
    inputs:
      targetType: inline
      failOnStderr: true
      script: |
        Write-Host "PSModulePath = $($env:PSModulePath)"
        $local:TargetDir = (($env:PSModulePath -split ':') | Where-Object { Test-Path $_ })[0]
        if (-not $TargetDir)
        {
          throw "Unable to find a PSModulePath in your user profile (" + $env:UserProfile + "), PSModulePath: " + $env:PSModulePath
        }
        $local:TargetDir = (Resolve-Path $local:TargetDir)
        Write-Host "ModuleDir = $($local:TargetDir)"
        Write-Output "##vso[task.setvariable variable=ModuleDir;]$($local:TargetDir)"
    displayName: 'Find PowerShell module path'

  - task: PowerShell@2
    inputs:
      targetType: filePath
      filePath: $(System.DefaultWorkingDirectory)/install-forpipeline.ps1
      arguments: $(ModuleDir) $(VersionString) $$(isPrerelease)
    displayName: 'Building PowerShell module'

  - task: Bash@3
    inputs:
      targetType: inline
      failOnStderr: true
      script: |
        $(System.DefaultWorkingDirectory)/build-docker.sh ubuntu18.04 $(VersionString)
        $(System.DefaultWorkingDirectory)/build-docker.sh ubuntu16.04 $(VersionString)
        $(System.DefaultWorkingDirectory)/build-docker.sh centos7 $(VersionString)
        $(System.DefaultWorkingDirectory)/build-docker.sh alpine3.8 $(VersionString)
        $(System.DefaultWorkingDirectory)/build-docker.sh opensuse42.3 $(VersionString)
        $(System.DefaultWorkingDirectory)/build-docker.sh fedora28 $(VersionString)
        docker tag oneidentity/safeguard-ps:$(VersionString)-alpine3.8 oneidentity/safeguard-ps:latest
    displayName: 'Build Linux Docker images'
